#!/usr/bin/python3
"""
Test suits for the base model
"""

import unittest
from models.base_model import BaseModel

class TestBaseModel(unittest.TestCase):
    """
    Tests attributes of the base model
    """

    def setUp(self):
        """
        Classes needed for testing
        """
        self.my_model = BaseModel()

    def test_basic(self):
        """
        Tests basic inputs for the BaseModel class
        """
        self.my_model.name = "ALX"
        self.my_model.number = 89
        self.assertEqual(self.my_model.name, "ALX")
        self.assertEqual(self.my_model.number, 89)

    def test_datetime_format(self):
        """
        Tests for correct datetime format
        """
        # Check that created_at and updated_at are datetime objects
        self.assertIsInstance(self.my_model.created_at, datetime)
        self.assertIsInstance(self.my_model.updated_at, datetime)

        # Optionally, check the format of the datetime objects
        # Note: This requires knowing the exact format used by BaseModel
        # For example, if BaseModel uses ISO 8601 format:
        self.assertEqual(self.my_model.created_at.isoformat(),
                         self.my_model.updated_at.isoformat())

if __name__ == '__main__':
    unittest.main()
